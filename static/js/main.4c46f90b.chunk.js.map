{"version":3,"sources":["domain/constants.ts","domain/entities/id/id.ts","domain/entities/category/category.ts","domain/entities/item/item.ts","domain/entities/item-list/item-list.ts","domain/errors/ErrorCodes.ts","domain/errors/ItemNotSavedError.ts","application/cases/get-all-items/get-all-items.case.ts","application/cases/get-settings/get-settings.case.ts","application/cases/set-item-as-required/set-item-as-required.case.ts","application/cases/set-item-as-not-required/set-item-as-not-required.case.ts","application/cases/set-item-as-mandatory/set-item-as-mandatory.case.ts","application/cases/set-item-as-not-mandatory/set-item-as-not-mandatory.case.ts","application/cases/set-settings/set-settings.case.ts","application/cases/use-case.ts","infrastructure/data-sources/pouch-db.data-source.ts","domain/errors/ItemNotFoundError.ts","infrastructure/repositories/item-repository/item.repository.pouch-db.ts","infrastructure/data-sources/local-storage/local-storage.ts","infrastructure/repositories/settings-repository/settings.repository.local-storage.ts","infrastructure/ui/store/generators.ts","infrastructure/ui/store/useStore.ts","infrastructure/ui/components/Menu/Menu.tsx","messages.ts","infrastructure/ui/components/ListItem/ListItem.tsx","infrastructure/ui/components/List/List.tsx","infrastructure/ui/components/Search/Search.tsx","infrastructure/ui/views/Groceries/Groceries.tsx","infrastructure/ui/views/ItemCRUD.tsx","infrastructure/ui/views/SettingsCRUD/SettingsCRUD.tsx","infrastructure/ui/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["palette","buttonSize","Id","id","v4","value","this","Category","_id","_rev","name","color","defaultCategory","Item","category","isRequired","isMandatory","quantity","ItemList","items","_items","sort","sortByName","filter","i","search","toLowerCase","includes","find","item","equals","Object","entries","reduce","dictionary","concat","a","b","sortAsc","ErrorCodes","ItemNotSavedError","Error","code","GetAllItemsCase","itemsRepository","findAll","GetSettingsCase","settingsRepository","SetItemAsRequiredCase","findById","save","SetItemAsNotRequiredCase","SetItemAsMandatoryCase","SetItemAsNotMandatoryCase","SetSettingsCase","settings","generateUseCases","itemRepository","getAllItems","getSettings","setItemAsMandatory","setItemAsNotMandatory","setItemAsNotRequired","setItemAsRequired","setSettings","PouchDb","plugin","PouchDbMemoryAdapter","PouchDbFindPlugin","PouchDatasource","db","params","createPouchDb","options","adapter","error","dbName","dbUrl","cb","remoteDb","sync","live","retry","on","console","toString","debug","info","JSON","stringify","DocumentTypes","ItemNotFoundError","LocalStorageCollection","ItemRepositoryPouchDB","pouch","get","document","findCategory","mapItemToDomain","allDocs","include_docs","documents","total_rows","groupDocumentsByType","categories","categoryDictionary","generateCategoryDictionary","map","put","type","ok","rows","result","doc","mapCategoryToDomain","SettingsRepositoryLocalStorage","localStorage","syncUrl","undefined","set","LocalStorage","collection","getItem","numPatt","RegExp","jsonPatt","test","parse","parseFloat","setItem","generateUseCasesWithRemoteDb","createPouchDbBrowser","Settings","generateUseCasesWithLocalDb","generateActions","store","useCases","exec","then","actions","savedSettings","initStore","proxy","log","useStore","useSnapshot","Views","messages","requiredListCTA","mandatoryListCTA","allItemsListCTA","searchCTA","searchInput","resetCTA","closeCTA","syncUrlInputLabel","syncUrlInput","submitButton","ListItem","className","to","onClick","size","EmptyList","List","length","groupItemsByCategory","categoryName","open","Search","onChange","onClose","useState","setSearch","emitChange","currentTarget","trim","placeholder","Menu","setView","activeView","onSearch","useCallback","isActive","view","getBackgroundColor","getTextColor","classNames","active","style","backgroundColor","All","Required","Mandatory","Groceries","lastSearch","setLastSearch","useEffect","getAll","getAllRequired","getAllMandatory","ItemCRUD","useRoute","match","Transition","in","timeout","width","SettingsCRUD","onSubmitHandler","event","preventDefault","FormData","generateOnSubmitHandler","onSubmit","htmlFor","defaultValue","App","base","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4c46f90b.chunk.js","sourcesContent":["export const palette = {\n  green: \"#62bb47\",\n  yellow: \"#fcb827\",\n  orange: \"#f6821f\",\n  red: \"#e03a3c\",\n  purple: \"#963d97\",\n  blue: \"#009ddc\",\n  white: \"#ffffff\",\n  gray: \"#999999\",\n  black: \"#000000\",\n};\n\nexport const buttonSize = \"32px\";\n","import { v4 } from \"uuid\";\n\nexport class Id {\n  readonly value: string;\n\n  constructor(id: string = v4()) {\n    this.value = id;\n  }\n\n  equals(id: Id): boolean {\n    return this.value === id.value;\n  }\n\n  toString() {\n    return this.value;\n  }\n}\n","import { Id } from \"../id\";\nimport { palette } from \"../../constants\";\n\nexport interface CategoryParams {\n  _id?: string;\n  _rev?: string;\n  id?: Id;\n  name?: string;\n  color?: string;\n}\n\nexport class Category {\n  readonly _id: string;\n  readonly _rev?: string;\n  readonly id: Id;\n  readonly name: string;\n  readonly color: string;\n\n  constructor({ _id, _rev, id, name, color }: CategoryParams = {}) {\n    this.id = id || new Id();\n    this._id = _id || this.id.value;\n    this._rev = _rev;\n    this.name = name || \"No Category\";\n    this.color = color || palette.gray;\n  }\n}\n\nexport const defaultCategory = new Category({ id: new Id(\"default-category\") });\n","import { Id } from \"../id\";\nimport { Category, defaultCategory } from \"../category\";\n\nexport interface ItemParams {\n  _id?: string;\n  _rev?: string;\n  id?: Id;\n  name?: string;\n  category?: Category;\n  isRequired?: boolean;\n  isMandatory?: boolean;\n  quantity?: number;\n}\n\nexport class Item {\n  readonly _id: string;\n  readonly _rev?: string;\n  readonly id: Id;\n  readonly category: Category;\n  readonly name: string;\n  readonly isRequired: boolean;\n  readonly isMandatory: boolean;\n  readonly quantity: number;\n\n  constructor({\n    _id,\n    _rev,\n    id,\n    name,\n    category,\n    isRequired,\n    isMandatory,\n    quantity,\n  }: ItemParams = {}) {\n    this.id = id || new Id();\n    this._id = _id || this.id.value;\n    this._rev = _rev;\n    this.name = name || \"Untitled\";\n    this.category = category || defaultCategory;\n    this.isRequired = isRequired ?? false;\n    this.isMandatory = isMandatory ?? false;\n    this.quantity = quantity ?? 1;\n  }\n}\n","import { Item } from \"../item\";\nimport { Id } from \"../id\";\n\ntype CategoryName = string;\n\nexport class ItemList {\n  private readonly _items: Item[];\n  constructor(items: Item[]) {\n    this._items = [...items].sort(ItemList.sortByName);\n  }\n\n  private get items() {\n    return [...this._items];\n  }\n\n  static groupItemsByCategory(\n    items: Item[]\n  ): Array<[CategoryName, Array<Item>]> {\n    return Object.entries(\n      items.reduce((dictionary, item) => {\n        if (dictionary[item.category.name]) {\n          dictionary[item.category.name] =\n            dictionary[item.category.name].concat(item);\n        } else {\n          dictionary[item.category.name] = [item];\n        }\n        return dictionary;\n      }, {} as Record<CategoryName, Item[]>)\n    ).sort(([a], [b]) => ItemList.sortAsc(a, b));\n  }\n\n  private static sortByName<T extends { name: string }>(a: T, b: T) {\n    return ItemList.sortAsc(a.name, b.name);\n  }\n\n  private static sortAsc<T = number | string>(a: T, b: T) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  getAll() {\n    return this.items;\n  }\n\n  getAllRequired() {\n    return this.items.filter((i) => i.isRequired);\n  }\n\n  getAllMandatory() {\n    return this.items.filter((i) => i.isMandatory && i.isRequired);\n  }\n\n  search(search: string): ItemList {\n    return new ItemList(\n      this.items.filter((i) =>\n        i.name.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }\n\n  findById(id: Id): Item | undefined {\n    return this._items.find((item) => id.equals(item.id));\n  }\n}\n","export const ErrorCodes = {\n  ItemNotSaved: \"ITEM_NOT_SAVED\",\n  ItemNotFound: \"ITEM_NOT_FOUND\",\n};\n","import { ErrorCodes } from \"./ErrorCodes\";\nimport { Item } from \"../entities\";\n\nexport class ItemNotSavedError extends Error {\n  static code = ErrorCodes.ItemNotSaved;\n\n  constructor(item: Item) {\n    super(`Error saving item with id ${item.id.value}.`);\n    this.name = \"ItemNotSavedError\";\n  }\n}\n","import { UseCase } from \"../use-case\";\nimport { ItemList } from \"../../../domain\";\nimport { ItemRepository } from \"../../repositories\";\n\nexport class GetAllItemsCase implements UseCase<void, Promise<ItemList>> {\n  constructor(private readonly itemsRepository: ItemRepository) {}\n  exec(): Promise<ItemList> {\n    return this.itemsRepository.findAll();\n  }\n}\n","import { UseCase } from \"../use-case\";\nimport { Settings } from \"../../../domain\";\nimport { SettingsRepository } from \"../../repositories\";\n\nexport class GetSettingsCase implements UseCase<void, Promise<Settings>> {\n  constructor(private readonly settingsRepository: SettingsRepository) {}\n  exec(): Promise<Settings> {\n    return this.settingsRepository.findAll();\n  }\n}\n","import { UseCase } from \"../use-case\";\nimport { Id } from \"../../../domain\";\nimport { ItemRepository } from \"../../repositories\";\n\ntype Input = Id;\ntype Output = Promise<void>;\n\nexport class SetItemAsRequiredCase implements UseCase<Input, Output> {\n  constructor(private readonly itemsRepository: ItemRepository) {}\n  async exec(id: Id): Promise<void> {\n    const item = await this.itemsRepository.findById(id);\n    await this.itemsRepository.save({\n      ...item,\n      isRequired: true,\n    });\n  }\n}\n","import { UseCase } from \"../use-case\";\nimport { Id } from \"../../../domain\";\nimport { ItemRepository } from \"../../repositories\";\n\ntype Input = Id;\ntype Output = Promise<void>;\n\nexport class SetItemAsNotRequiredCase implements UseCase<Input, Output> {\n  constructor(private readonly itemsRepository: ItemRepository) {}\n  async exec(id: Id): Promise<void> {\n    const item = await this.itemsRepository.findById(id);\n    await this.itemsRepository.save({\n      ...item,\n      isRequired: false,\n      isMandatory: false,\n    });\n  }\n}\n","import { UseCase } from \"../use-case\";\nimport { Id } from \"../../../domain\";\nimport { ItemRepository } from \"../../repositories\";\n\ntype Input = Id;\ntype Output = Promise<void>;\n\nexport class SetItemAsMandatoryCase implements UseCase<Input, Output> {\n  constructor(private readonly itemsRepository: ItemRepository) {}\n  async exec(id: Id): Promise<void> {\n    const item = await this.itemsRepository.findById(id);\n    await this.itemsRepository.save({\n      ...item,\n      isMandatory: true,\n      isRequired: true,\n    });\n  }\n}\n","import { UseCase } from \"../use-case\";\nimport { Id } from \"../../../domain\";\nimport { ItemRepository } from \"../../repositories\";\n\ntype Input = Id;\ntype Output = Promise<void>;\n\nexport class SetItemAsNotMandatoryCase implements UseCase<Input, Output> {\n  constructor(private readonly itemsRepository: ItemRepository) {}\n  async exec(id: Id): Promise<void> {\n    const item = await this.itemsRepository.findById(id);\n    await this.itemsRepository.save({\n      ...item,\n      isMandatory: false,\n    });\n  }\n}\n","import { UseCase } from \"../use-case\";\nimport { Settings } from \"../../../domain\";\nimport { SettingsRepository } from \"../../repositories\";\n\nexport class SetSettingsCase implements UseCase<Settings, Promise<Settings>> {\n  constructor(private readonly settingsRepository: SettingsRepository) {}\n  exec(settings: Settings): Promise<Settings> {\n    return this.settingsRepository.save(settings);\n  }\n}\n","import {\n  GetAllItemsCase,\n  GetSettingsCase,\n  SetItemAsMandatoryCase,\n  SetItemAsNotMandatoryCase,\n  SetItemAsNotRequiredCase,\n  SetItemAsRequiredCase,\n  SetSettingsCase,\n} from \"./index\";\nimport { ItemRepository, SettingsRepository } from \"../repositories\";\n\nexport interface UseCase<Input, Output> {\n  exec(input: Input): Output;\n}\n\nexport interface UseCases {\n  getAllItems: GetAllItemsCase;\n  getSettings: GetSettingsCase;\n  setItemAsRequired: SetItemAsRequiredCase;\n  setItemAsNotRequired: SetItemAsNotRequiredCase;\n  setItemAsMandatory: SetItemAsMandatoryCase;\n  setItemAsNotMandatory: SetItemAsNotMandatoryCase;\n  setSettings: SetSettingsCase;\n}\n\ninterface Repositories {\n  itemRepository: ItemRepository;\n  settingsRepository: SettingsRepository;\n}\n\nexport function generateUseCases({\n  itemRepository,\n  settingsRepository,\n}: Repositories): UseCases {\n  return {\n    getAllItems: new GetAllItemsCase(itemRepository),\n    getSettings: new GetSettingsCase(settingsRepository),\n    setItemAsMandatory: new SetItemAsMandatoryCase(itemRepository),\n    setItemAsNotMandatory: new SetItemAsNotMandatoryCase(itemRepository),\n    setItemAsNotRequired: new SetItemAsNotRequiredCase(itemRepository),\n    setItemAsRequired: new SetItemAsRequiredCase(itemRepository),\n    setSettings: new SetSettingsCase(settingsRepository),\n  };\n}\n","/* eslint-disable camelcase */\nimport PouchDb from \"pouchdb\";\nimport PouchDbMemoryAdapter from \"pouchdb-adapter-memory\";\nimport PouchDbFindPlugin from \"pouchdb-find\";\n\nPouchDb.plugin(PouchDbMemoryAdapter);\nPouchDb.plugin(PouchDbFindPlugin);\n\nexport type PouchDBDocument<T> = T & PouchDB.Core.IdMeta & PouchDB.Core.GetMeta;\n\nexport interface PouchDatasourceParams {\n  dbName: string;\n  dbUrl?: string;\n  cb?: Function;\n}\n\nexport class PouchDatasource {\n  static DocumentTypes = {\n    Item: \"item\",\n    Category: \"category\",\n  };\n  static dbName = \"groceries\";\n\n  private constructor(readonly db: PouchDB.Database) {}\n\n  static createPouchDbBrowser(params: PouchDatasourceParams): PouchDatasource {\n    return PouchDatasource.createPouchDb({ ...params });\n  }\n\n  static createPouchDbMemory(params: PouchDatasourceParams): PouchDatasource {\n    return PouchDatasource.createPouchDb({\n      ...params,\n      options: { adapter: \"memory\" },\n    });\n  }\n\n  static isPouchDbError(error: unknown): error is PouchDB.Core.Error {\n    return \"status\" in (error as any);\n  }\n\n  private static createPouchDb({\n    dbName,\n    dbUrl,\n    cb,\n    options,\n  }: PouchDatasourceParams & {\n    options?: PouchDB.Configuration.DatabaseConfiguration;\n  }): PouchDatasource {\n    const remoteDb = `${dbUrl}/${dbName}`;\n    if (dbUrl && cb) {\n      PouchDb.sync(dbName, remoteDb, {\n        live: true,\n        retry: true,\n      })\n        .on(\"error\", (error) => {\n          console.error(\"[SYNC ERROR]\", error.toString());\n        })\n        .on(\"active\", () => {\n          console.debug(\"[SYNC ACTIVE]\");\n        })\n        .on(\"change\", (info) => {\n          console.debug(\"[SYNC CHANGES]\", JSON.stringify(info, null, 2));\n          cb();\n        })\n        .on(\"complete\", (info) => {\n          console.debug(\"[SYNC COMPLETE]\", JSON.stringify(info, null, 2));\n          cb();\n        });\n    }\n    return options\n      ? new PouchDatasource(new PouchDb(dbName, options))\n      : new PouchDatasource(new PouchDb(dbName));\n  }\n}\n","import { ErrorCodes } from \"./ErrorCodes\";\nimport { Id } from \"../entities\";\n\nexport class ItemNotFoundError extends Error {\n  static code = ErrorCodes.ItemNotFound;\n\n  constructor(id: Id) {\n    super(`Item with id ${id.value} not found.`);\n    this.name = \"ItemNotFoundError\";\n  }\n}\n","import { ItemRepository } from \"../../../application\";\nimport {\n  Category,\n  Id,\n  Item,\n  ItemList,\n  ItemNotSavedError,\n} from \"../../../domain\";\nimport {\n  PouchDatasource,\n  PouchDBDocument,\n} from \"../../data-sources/pouch-db.data-source\";\nimport { ItemNotFoundError } from \"../../../domain/errors/ItemNotFoundError\";\n\nexport type PouchDBItem = PouchDBDocument<Item> & {\n  id: string;\n  category: string;\n};\nexport type PouchDBCategory = PouchDBDocument<Category> & {\n  id: string;\n};\n\nexport class ItemRepositoryPouchDB implements ItemRepository {\n  constructor(private readonly pouch: PouchDatasource) {}\n\n  private static mapItemToDomain(\n    document: PouchDBItem,\n    category: Category\n  ): Item {\n    return new Item({\n      _id: document._id,\n      _rev: document._rev,\n      id: new Id(document.id),\n      name: document.name,\n      category,\n      isRequired: document.isRequired,\n      isMandatory: document.isMandatory,\n    });\n  }\n\n  private static mapCategoryToDomain(document: PouchDBCategory): Category {\n    return new Category({\n      _id: document._id,\n      _rev: document._rev,\n      id: new Id(document.id),\n      name: document.name,\n      color: document.color,\n    });\n  }\n\n  private static generateCategoryDictionary(\n    categories: Array<PouchDBCategory>\n  ): Record<string, Category> {\n    return categories.reduce((dictionary, category) => {\n      dictionary[category.id] =\n        ItemRepositoryPouchDB.mapCategoryToDomain(category);\n      return dictionary;\n    }, {} as Record<string, Category>);\n  }\n\n  async findById(id: Id): Promise<Item> {\n    try {\n      const document = await this.pouch.db.get<PouchDBItem>(id.value);\n      const category = await this.findCategory(document.category);\n      return ItemRepositoryPouchDB.mapItemToDomain(document, category);\n    } catch (error) {\n      console.error(error?.toString());\n      throw new ItemNotFoundError(id);\n    }\n  }\n\n  async findAll(): Promise<ItemList> {\n    const documents = await this.pouch.db.allDocs<\n      PouchDBItem | PouchDBCategory\n    >({ include_docs: true });\n    if (documents.total_rows === 0) {\n      return new ItemList([]);\n    }\n    const { categories, items } = this.groupDocumentsByType(documents);\n    const categoryDictionary =\n      ItemRepositoryPouchDB.generateCategoryDictionary(categories);\n    return new ItemList(\n      items.map((item) => {\n        const category = categoryDictionary[item.category];\n        return ItemRepositoryPouchDB.mapItemToDomain(item, category);\n      })\n    );\n  }\n\n  async save(item: Item): Promise<Item> {\n    const response = await this.pouch.db.put({\n      ...item,\n      id: item.id.value,\n      type: PouchDatasource.DocumentTypes.Item,\n      category: item.category.id.value,\n    });\n    if (!response.ok) {\n      throw new ItemNotSavedError(item);\n    }\n    return this.findById(item.id);\n  }\n\n  private groupDocumentsByType(\n    documents: PouchDB.Core.AllDocsResponse<PouchDBItem | PouchDBCategory>\n  ) {\n    return documents.rows.reduce(\n      (result, { doc }) => {\n        // @ts-ignore\n        if (doc.type === PouchDatasource.DocumentTypes.Category) {\n          // @ts-ignore\n          result.categories = result.categories.concat(doc);\n        }\n        // @ts-ignore\n        if (doc.type === PouchDatasource.DocumentTypes.Item) {\n          // @ts-ignore\n          result.items = result.items.concat(doc);\n        }\n        return result;\n      },\n      { categories: [] as PouchDBCategory[], items: [] as PouchDBItem[] }\n    );\n  }\n\n  private async findCategory(id: string): Promise<Category> {\n    const category = await this.pouch.db.get<PouchDBCategory>(id);\n    return ItemRepositoryPouchDB.mapCategoryToDomain(category);\n  }\n}\n","import { LocalStorageDataSource } from \"./local-storage.data-source\";\n\nexport enum LocalStorageCollection {\n  Items = \"groceries:items\",\n  Settings = \"groceries:settings\",\n}\n\nexport class LocalStorage<T> implements LocalStorageDataSource<T> {\n  constructor(private readonly collection: string) {}\n\n  get(): T | null {\n    const item = localStorage.getItem(this.collection);\n    const numPatt = new RegExp(/^\\d+$/);\n    const jsonPatt = new RegExp(/[[{].*[}\\]]/);\n\n    if (item) {\n      if (jsonPatt.test(item)) {\n        return JSON.parse(item);\n      } else if (numPatt.test(item)) {\n        return parseFloat(item) as T;\n      } else if (item === \"true\") {\n        return true as T;\n      } else if (item === \"false\") {\n        return false as T;\n      } else {\n        return item as T;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  set(item: T) {\n    if (typeof item === \"object\") {\n      localStorage.setItem(this.collection, JSON.stringify(item));\n    } else {\n      localStorage.setItem(this.collection, item as string);\n    }\n  }\n}\n","import { Settings } from \"../../../domain\";\nimport { LocalStorageDataSource } from \"../../data-sources\";\nimport { SettingsRepository } from \"../../../application\";\n\nexport class SettingsRepositoryLocalStorage implements SettingsRepository {\n  constructor(\n    private readonly localStorage: LocalStorageDataSource<Settings>\n  ) {}\n\n  async findAll() {\n    const settings = this.localStorage.get();\n    return (\n      settings || {\n        syncUrl: undefined,\n      }\n    );\n  }\n\n  async save(settings: Settings) {\n    this.localStorage.set(settings);\n    return settings;\n  }\n}\n","import { Id, Settings } from \"../../../domain\";\nimport { generateUseCases, UseCases } from \"../../../application\";\nimport { ItemRepositoryPouchDB } from \"../../repositories/item-repository/item.repository.pouch-db\";\nimport { PouchDatasource } from \"../../data-sources/pouch-db.data-source\";\nimport { SettingsRepositoryLocalStorage } from \"../../repositories\";\nimport { LocalStorage, LocalStorageCollection } from \"../../data-sources\";\nimport { initStore, Store, StoreActions } from \"./useStore\";\n\nexport function generateUseCasesWithRemoteDb(settings: Settings, cb: Function) {\n  return generateUseCases({\n    itemRepository: new ItemRepositoryPouchDB(\n      PouchDatasource.createPouchDbBrowser({\n        dbName: PouchDatasource.dbName,\n        dbUrl: settings.syncUrl,\n        cb,\n      })\n    ),\n    settingsRepository: new SettingsRepositoryLocalStorage(\n      new LocalStorage<Settings>(LocalStorageCollection.Settings)\n    ),\n  });\n}\n\nexport function generateUseCasesWithLocalDb() {\n  const itemRepository = new ItemRepositoryPouchDB(\n    PouchDatasource.createPouchDbBrowser({\n      dbName: PouchDatasource.dbName,\n    })\n  );\n  const settingsRepository = new SettingsRepositoryLocalStorage(\n    new LocalStorage<Settings>(LocalStorageCollection.Settings)\n  );\n  return generateUseCases({\n    itemRepository,\n    settingsRepository,\n  });\n}\n\nexport function generateActions(\n  store: Store,\n  useCases: UseCases\n): StoreActions {\n  return {\n    getAllItems() {\n      useCases.getAllItems.exec().then((items) => {\n        store.items = items;\n      });\n    },\n    getSettings() {\n      useCases.getSettings.exec().then((settings) => {\n        store.settings = settings;\n      });\n    },\n    setItemAsRequired(id: Id) {\n      useCases.setItemAsRequired.exec(id).then(() => {\n        return store.actions.getAllItems();\n      });\n    },\n    setItemAsNotRequired(id: Id) {\n      useCases.setItemAsNotRequired.exec(id).then(() => {\n        return store.actions.getAllItems();\n      });\n    },\n    setItemAsMandatory(id: Id) {\n      useCases.setItemAsMandatory.exec(id).then(() => {\n        return store.actions.getAllItems();\n      });\n    },\n    setItemAsNotMandatory(id: Id) {\n      useCases.setItemAsNotMandatory.exec(id).then(() => {\n        return store.actions.getAllItems();\n      });\n    },\n    setSettings(settings: Settings) {\n      useCases.setSettings.exec(settings).then((savedSettings) => {\n        store.settings = savedSettings;\n        initStore();\n      });\n    },\n  };\n}\n","import { Id, ItemList, Settings } from \"../../../domain\";\nimport { proxy, useSnapshot } from \"valtio\";\nimport {\n  generateActions,\n  generateUseCasesWithLocalDb,\n  generateUseCasesWithRemoteDb,\n} from \"./generators\";\n\nexport interface StoreActions {\n  getAllItems(): void;\n  getSettings(): void;\n  setItemAsRequired(id: Id): void;\n  setItemAsNotRequired(id: Id): void;\n  setItemAsMandatory(id: Id): void;\n  setItemAsNotMandatory(id: Id): void;\n  setSettings(settings: Settings): void;\n}\n\nexport interface Store {\n  items: ItemList;\n  settings: Settings;\n  actions: StoreActions;\n}\n\nconst store = proxy<Store>({\n  items: new ItemList([]),\n  settings: { syncUrl: undefined },\n  actions: {\n    getAllItems() {},\n    getSettings() {},\n    setItemAsRequired() {},\n    setItemAsNotRequired() {},\n    setItemAsMandatory() {},\n    setItemAsNotMandatory() {},\n    setSettings() {},\n  },\n});\n\nexport function initStore(useCases = generateUseCasesWithLocalDb()) {\n  store.items = new ItemList([]);\n  useCases.getSettings.exec().then((settings) => {\n    if (settings.syncUrl) {\n      console.log(\"[INIT STORE]: REMOTE DB\");\n      store.settings = settings;\n      store.actions = generateActions(\n        store,\n        generateUseCasesWithRemoteDb(settings, store.actions.getAllItems)\n      );\n    } else {\n      console.log(\"[INIT STORE]: LOCAL DB\");\n      store.actions = generateActions(store, useCases);\n    }\n  });\n}\n\nexport function useStore() {\n  return useSnapshot(store);\n}\n","import React, { FC, useCallback, useState } from \"react\";\nimport \"./Menu.scss\";\nimport { BsFillCartFill, BsFillStarFill, BsSearch } from \"react-icons/bs\";\nimport { FiList } from \"react-icons/fi\";\nimport { palette } from \"../../../../domain\";\nimport { Search } from \"../Search\";\nimport { messages } from \"../../../../messages\";\nimport classNames from \"classnames\";\n\nexport enum Views {\n  All,\n  Required,\n  Mandatory,\n}\n\nexport interface MenuProps {\n  setView: (view: Views) => void;\n  activeView: Views;\n  onSearch: (search: string) => void;\n}\n\nexport const Menu: FC<MenuProps> = ({ setView, activeView, onSearch }) => {\n  const [search, setSearch] = useState(false);\n  const onClose = useCallback(() => setSearch(false), [setSearch]);\n  const isActive = (view: Views) => view === activeView;\n  const getBackgroundColor = (view: Views) =>\n    isActive(view) ? palette.yellow : \"transparent\";\n  const getTextColor = (view: Views) =>\n    isActive(view) ? palette.purple : \"inherit\";\n  return (\n    <nav className=\"Menu\">\n      <div className={classNames(\"flip-container\", { active: search })}>\n        {search ? (\n          <div className={classNames(\"flip-back\", { active: search })}>\n            <Search onChange={onSearch} onClose={onClose} />\n          </div>\n        ) : (\n          <ul\n            style={{ backgroundColor: palette.purple, color: palette.white }}\n            className={classNames(\"flip-front\", { active: !search })}\n          >\n            <li\n              style={{\n                backgroundColor: getBackgroundColor(Views.All),\n                color: getTextColor(Views.All),\n              }}\n            >\n              <button\n                aria-label={messages.menu.allItemsListCTA}\n                onClick={() => setView(Views.All)}\n              >\n                <FiList />\n              </button>\n            </li>\n            <li\n              style={{\n                backgroundColor: getBackgroundColor(Views.Required),\n                color: getTextColor(Views.Required),\n              }}\n            >\n              <button\n                aria-label={messages.menu.requiredListCTA}\n                onClick={() => setView(Views.Required)}\n              >\n                <BsFillCartFill />\n              </button>\n            </li>\n            <li\n              style={{\n                backgroundColor: getBackgroundColor(Views.Mandatory),\n                color: getTextColor(Views.Mandatory),\n              }}\n            >\n              <button\n                aria-label={messages.menu.mandatoryListCTA}\n                onClick={() => setView(Views.Mandatory)}\n              >\n                <BsFillStarFill />\n              </button>\n            </li>\n            <li>\n              <button\n                aria-label={messages.menu.searchCTA}\n                onClick={() => setSearch(true)}\n              >\n                <BsSearch />\n              </button>\n            </li>\n          </ul>\n        )}\n      </div>\n    </nav>\n  );\n};\n","export const messages = {\n  menu: {\n    requiredListCTA: \"Show items to buy\",\n    mandatoryListCTA: \"Show mandatory items to buy\",\n    allItemsListCTA: \"Show all items\",\n    searchCTA: \"Search items\",\n  },\n  actions: {\n    setItemAsRequired: \"Set item to buy\",\n    setItemAsNotRequired: \"Remove item from buy list\",\n    setItemAsMandatory: \"Set item as mandatory to buy\",\n    setItemAsNotMandatory: \"Remove item from mandatory to buy list\",\n  },\n  emptyList: \"There are no items in this list\",\n  search: {\n    searchInput: \"🔍 Search\",\n    resetCTA: \"Reset your search\",\n    closeCTA: \"Close search\",\n  },\n  settings: {\n    syncUrlInputLabel:\n      \"Add your CouchDB url for syncing your data across devices.\",\n    syncUrlInput: \"Set your database url\",\n    submitButton: \"Save settings\",\n  },\n};\n","import { FC } from \"react\";\nimport { Item, palette } from \"../../../../domain\";\nimport \"./ListItem.scss\";\nimport { BsFillStarFill } from \"react-icons/bs\";\nimport { AiFillMinusCircle, AiFillPlusCircle } from \"react-icons/ai\";\nimport { messages } from \"../../../../messages\";\nimport { useStore } from \"../../store\";\nimport { Link } from \"wouter\";\n\nexport interface ListItemProps {\n  item: Item;\n}\n\nexport const ListItem: FC<ListItemProps> = ({ item }) => {\n  const { actions } = useStore();\n  return (\n    <div className=\"ListItem\" data-testid={item.id.value}>\n      <span className=\"quantity\">{item.quantity}</span>\n      <Link to={`/items/${item.id.value}`}>\n        <span className=\"item\">{item.name}</span>\n      </Link>\n      <span className=\"is-required\">\n        {item.isRequired ? (\n          <button\n            aria-label={messages.actions.setItemAsNotRequired}\n            onClick={() => actions.setItemAsNotRequired(item.id)}\n          >\n            <AiFillMinusCircle size={32} color={palette.red} />\n          </button>\n        ) : (\n          <button\n            aria-label={messages.actions.setItemAsRequired}\n            onClick={() => actions.setItemAsRequired(item.id)}\n          >\n            <AiFillPlusCircle size={32} color={palette.green} />\n          </button>\n        )}\n      </span>\n      <span className=\"is-mandatory\">\n        {item.isMandatory ? (\n          <button\n            aria-label={messages.actions.setItemAsNotMandatory}\n            onClick={() => actions.setItemAsNotMandatory(item.id)}\n          >\n            <BsFillStarFill size={32} color={palette.yellow} />\n          </button>\n        ) : (\n          <button\n            aria-label={messages.actions.setItemAsMandatory}\n            onClick={() => actions.setItemAsMandatory(item.id)}\n          >\n            <BsFillStarFill size={32} color={palette.gray} />\n          </button>\n        )}\n      </span>\n    </div>\n  );\n};\n","import { FC } from \"react\";\nimport { Item, ItemList } from \"../../../../domain\";\nimport { ListItem } from \"../ListItem\";\nimport \"./List.scss\";\nimport { messages } from \"../../../../messages\";\n\nexport interface ListProps {\n  items: Item[];\n}\n\nconst EmptyList = () => (\n  <div className=\"List\">\n    <p>{messages.emptyList}</p>\n  </div>\n);\n\nexport const List: FC<ListProps> = ({ items }) => {\n  if (items.length === 0) {\n    return <EmptyList />;\n  }\n  return (\n    <div className=\"List\">\n      {ItemList.groupItemsByCategory(items).map(([categoryName, items]) => (\n        <details open key={categoryName}>\n          <summary>{categoryName}</summary>\n          <ul className=\"ItemList\">\n            {items.map((item) => (\n              <li key={item.id.value}>\n                <ListItem item={item} />\n              </li>\n            ))}\n          </ul>\n        </details>\n      ))}\n    </div>\n  );\n};\n","import React, { ChangeEventHandler, FC, useState } from \"react\";\nimport \"./Search.scss\";\nimport { buttonSize } from \"../../../../domain\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillBackspaceFill } from \"react-icons/bs\";\nimport { messages } from \"../../../../messages\";\n\nexport interface SearchProps {\n  onChange: (search: string) => void;\n  onClose: () => void;\n}\n\nexport const Search: FC<SearchProps> = ({ onChange, onClose }) => {\n  const [search, setSearch] = useState(\"\");\n  function emitChange(value: string) {\n    setSearch(value);\n    onChange(value);\n  }\n\n  const onInputChange: ChangeEventHandler<HTMLInputElement> = ({\n    currentTarget,\n  }) => {\n    const value = currentTarget.value.trim();\n    emitChange(value);\n  };\n  const handleClick = () => {\n    if (search) {\n      emitChange(\"\");\n    } else {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"Search\">\n      <input\n        aria-label={messages.search.searchInput}\n        type=\"text\"\n        value={search}\n        onChange={onInputChange}\n        placeholder={messages.search.searchInput}\n      />\n      <button\n        aria-label={\n          search ? messages.search.resetCTA : messages.search.closeCTA\n        }\n        onClick={handleClick}\n      >\n        {search && <BsFillBackspaceFill size={buttonSize} />}\n        {!search && <BiArrowBack size={buttonSize} />}\n      </button>\n    </div>\n  );\n};\n","import { List, Menu, Views } from \"../../components\";\nimport React, { useEffect, useState } from \"react\";\nimport { useStore } from \"../../store\";\n\nexport function Groceries() {\n  const { items, actions } = useStore();\n  const [lastSearch, setLastSearch] = useState(\"\");\n  const [view, setView] = useState(Views.All);\n\n  useEffect(() => {\n    actions.getAllItems();\n  }, [actions, view]);\n\n  return (\n    <>\n      {view === Views.All && <List items={items.search(lastSearch).getAll()} />}\n      {view === Views.Required && (\n        <List items={items.search(lastSearch).getAllRequired()} />\n      )}\n      {view === Views.Mandatory && (\n        <List items={items.search(lastSearch).getAllMandatory()} />\n      )}\n      <Menu activeView={view} setView={setView} onSearch={setLastSearch} />\n    </>\n  );\n}\n","import { useRoute } from \"wouter\";\nimport { Transition } from \"react-transition-group\";\nimport { useStore } from \"../store\";\nimport { Id } from \"../../../domain\";\nimport { useEffect } from \"react\";\n\nexport function ItemCRUD() {\n  const [match, params] = useRoute(\"/items/:id\");\n  const { items, actions } = useStore();\n  const item = items.findById(new Id(params?.id));\n\n  useEffect(() => {\n    actions.getAllItems();\n  }, [actions]);\n\n  return (\n    <Transition in={match} timeout={500}>\n      <div className=\"ItemCrud\" style={{ width: \"100%\" }}>\n        <span>Hi, this is: {params!.id}</span>\n        <pre>\n          <code>{JSON.stringify(item, null, 2)}</code>\n        </pre>\n      </div>\n    </Transition>\n  );\n}\n","import { FormEventHandler, useEffect } from \"react\";\nimport { useRoute } from \"wouter\";\nimport { Transition } from \"react-transition-group\";\nimport { messages } from \"../../../../messages\";\nimport { StoreActions, useStore } from \"../../store\";\nimport \"./SettingsCRUD.scss\";\n\nexport function SettingsCRUD() {\n  const [match] = useRoute(\"/settings\");\n  const { actions, settings } = useStore();\n  const onSubmitHandler = generateOnSubmitHandler(actions);\n\n  useEffect(() => {\n    actions.getSettings();\n  }, [actions]);\n\n  return (\n    <Transition in={match} timeout={500}>\n      <form className=\"SettingsCRUD\" onSubmit={onSubmitHandler}>\n        <label htmlFor=\"syncUrl\">{messages.settings.syncUrlInputLabel}</label>\n        <input\n          name=\"syncUrl\"\n          type=\"url\"\n          aria-label={messages.settings.syncUrlInput}\n          defaultValue={settings?.syncUrl}\n        />\n        <button type=\"submit\" aria-label={messages.settings.submitButton}>\n          {messages.settings.submitButton} 💾\n        </button>\n      </form>\n    </Transition>\n  );\n}\n\nfunction generateOnSubmitHandler(actions: StoreActions) {\n  const onSubmitHandler: FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget as HTMLFormElement);\n    const syncUrl = formData.get(\"syncUrl\")?.toString();\n    if (syncUrl) {\n      actions.setSettings({\n        syncUrl,\n      });\n    }\n  };\n  return onSubmitHandler;\n}\n","import React, { useEffect } from \"react\";\nimport \"./App.scss\";\nimport { palette } from \"../../../domain\";\nimport { initStore } from \"../store\";\nimport { Link, Route, Router, useRoute } from \"wouter\";\nimport { Groceries, ItemCRUD, SettingsCRUD } from \"../views\";\n\nfunction App() {\n  const [match] = useRoute(\"/ulist-mvp\");\n  useEffect(() => {\n    initStore();\n  }, []);\n\n  return (\n    <Router base=\"/ulist-mvp\">\n      <div className=\"App\">\n        <header\n          className=\"App-header\"\n          style={{\n            backgroundColor: palette.purple,\n            color: palette.white,\n          }}\n        >\n          <span>{!match && <Link to=\"/\">🔙</Link>}</span>\n          <span>🛒 Groceries list 🛒</span>\n          <span>\n            <Link to=\"/settings\">⚙️</Link>\n          </span>\n        </header>\n        <main className=\"App-main\">\n          <Route path=\"/\" component={Groceries} />\n          <Route path=\"/settings\" component={SettingsCRUD} />\n          <Route path=\"/items/:id\" component={ItemCRUD} />\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.scss\";\nimport App from \"./infrastructure/ui/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}